#IN ORACLE
CREATE TABLE users1 (
   username varchar(25),
   password varchar(20)
);

select * from users1;



#SERVER
package org.example;
import java.net.MalformedURLException;
import java.rmi.*;

import java.rmi.registry.LocateRegistry;

public class Server {
    public static void main(String[] args) throws RemoteException {
        try{
            System.setProperty("java.rmi.server.hostname","localhost");
            LocateRegistry.createRegistry(10000);
            remote a =new database();
            Naming.bind("rmi://localhost:10000/data",a);
        }catch(Exception a)
        {}



    }

}

REMOTE METHODS
package org.example;

import java.rmi.Remote;
import java.rmi.RemoteException;

public interface remote extends Remote {
    public void update( String username, String password) throws RemoteException;
    public void delete( String username) throws RemoteException;
    public void create( String username, String password) throws RemoteException;
    public void read( ) throws RemoteException;


}

IMPLEMENTATION 
package org.example;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.*;

public class database extends UnicastRemoteObject implements remote {
    database() throws RemoteException
    {
        super();
    }
    // JDBC URL, username, and password of Oracle database server
    static final String JDBC_URL = "jdbc:oracle:thin:@localhost:1521:xe";
    static final String USERNAME = "Your_username";
    static final String PASSWORD = "your_password";

    // JDBC variables for connection, statement, and result set
    static Connection connection = null;
    static Statement statement = null;
    static ResultSet resultSet = null;

    // Method to establish database connection
    public void connect() throws  RemoteException {
        try {
            // Registering the Oracle JDBC driver
            Class.forName("oracle.jdbc.driver.OracleDriver");

            // Establishing connection
            connection = DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD);
            System.out.println("Connected to the database.");
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }

    // Method to close database connection
    public void close() {
        try {
            if (resultSet != null) resultSet.close();
            if (statement != null) statement.close();
            if (connection != null) connection.close();
            System.out.println("Database connection closed.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Create operation
    public void create(String username, String password) throws  RemoteException {
        try {
            connect();
            System.out.println("Hello");
            statement = connection.createStatement();
            String sql = "INSERT INTO users1 (username, password) VALUES ('" + username + "', '" + password + "')";
            int rowsAffected = statement.executeUpdate(sql);
            System.out.println("Hello1");

            if (rowsAffected > 0)
                System.out.println("User created successfully.");
            else
                System.out.println("User creation failed.");
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            close();
        }
    }

    // Read operation
    public void read() throws  RemoteException {
        try {
            connect();
            statement = connection.createStatement();
            resultSet = statement.executeQuery("SELECT * FROM users1");
            while (resultSet.next()) {
                System.out.println("Username: " + resultSet.getString("username") + ", Password: " + resultSet.getString("password"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            close();
        }
    }

    // Update operation
    public void update( String username, String password) throws  RemoteException {
        try {
            connect();
            statement = connection.createStatement();
            String sql = "UPDATE users1 SET password='" + password + "' WHERE username=" + username;
            int rowsAffected = statement.executeUpdate(sql);
            if (rowsAffected > 0)
                System.out.println("User updated successfully.");
            else
                System.out.println("User update failed.");
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            close();
        }

    }

    // Delete operation
    public  void delete(String username) throws  RemoteException {
        try {
            connect();
            statement = connection.createStatement();
            String sql = "DELETE FROM users1 WHERE username='" + username +"'" ;
            int rowsAffected = statement.executeUpdate(sql);
            if (rowsAffected > 0)
                System.out.println("User deleted successfully.");
            else
                System.out.println("User deletion failed.");
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            close();
        }
    }
}


CLIENT
package org.example;
import java.rmi.Naming;

public class Client {
    public static void main(String[] args){
        try{
            remote a = (remote) Naming.lookup("rmi://localhost:10000/data");
            a.create("Madumitha","hello");
        }
        catch(Exception e){
            System.out.println(e);
        }
    }
}

